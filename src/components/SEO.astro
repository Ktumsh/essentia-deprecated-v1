---
import type { Preload } from "@/types/Preload";

interface Props {
  title: string;
  description: string;
  preload?: Array<Preload>;
  canonical?: string;
  image?: string;
}

const {
  title,
  description,
  preload,
  canonical,
  image = "https://essentia-cl.vercel.app/essentia-512x512.png",
} = Astro.props as Props;

const determineCanonicalURL = () => {
  if (Astro.url.host.includes("localhost")) return "http://localhost:4321";
  return canonical || Astro.url.pathname;
};

const canonicalURL = new URL(determineCanonicalURL(), Astro.site);
---

<title>{title}</title>

<meta charset="UTF-8" />
<meta name="description" content={description} />

{
  preload?.map(({ href, as, type, rel = "preload", crossorigin }) => (
    <link rel={rel} href={href} as={as} type={type} crossorigin={crossorigin} />
  ))
}

<link rel="canonical" href={canonicalURL} />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="theme-color" content="#000" />
<meta name="color-scheme" content="light dark" />

<meta
  name="keywords"
  content="essentia, salud, nutrición, alimentación, bienestar, esencia"
/>

<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="language" content="es" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL.href} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:site_name" content="Essentia" />
<meta property="og:locale" content="es_CL" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL.href} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<link rel="icon" type="image/webp" href="/e-logomark-on-dark.webp" />

<script>
  if ("serviceWorker" in navigator) {
    navigator.serviceWorker.register("/sw.js");
  }
</script>
<link rel="manifest" href="/manifest.webmanifest" />
