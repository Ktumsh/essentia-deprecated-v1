---
import NewsCard from "@/components/Resources/NewsCard.astro";
import RecomCarousel from "@/components/Resources/RecomCarousel.astro";
import Resources from "@/components/Resources/Resources.astro";
import { getSession } from "auth-astro/server";
import { fetchNews } from "@/consts/data-news";
import Greeting from "@/components/Resources/Greeting.svelte";
import Search from "@/icons/search.astro";
import Clear from "@/icons/clear.astro";

const session = await getSession(Astro.request);

const getFirstName = (fullName: any) => {
  if (!fullName) return "Usuario";
  const nameParts = fullName.toLowerCase().split(" ");
  return capitalize(nameParts[0]);
};

const capitalize = (word: string) => {
  return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
};

const nameFromUser = getFirstName(session?.user?.name);

const news = await fetchNews();
---

<main
  class="flex flex-col min-h-dvh w-full max-w-[1250px] py-5 px-5 shrink items-stretch grow"
>
  <div class="hidden sm:block w-full h-80 max-h-80 mb-5">
    <div class="overflow-hidden h-80 w-full">
      <div
        class="flex justify-center items-center size-full py-20 px-5 bg-[linear-gradient(to_right,rgb(242,112,156),rgb(255,148,114))] dark:bg-[linear-gradient(111.1deg,#061b37_-4.8%,_rgb(255,_115,_115)_82.7%,_rgb(255,_175,_123)_97.2%)]"
      >
        <div
          class="flex flex-col size-full items-center justify-center relative"
        >
          <h2
            class="absolute top-2 text-2xl sm:text-3xl font-bold text-white dark:text-gray-200"
          >
            <Greeting client:only="svelte" />, {nameFromUser || "Usuario"}
          </h2>
          <form
            id="search-form"
            role="search"
            class="flex items-center justify-center w-full rounded-xl"
          >
            <div
              class="relative flex flex-row text-base-color-m/50 max-w-[480px] w-full lg:w-[480px] h-10"
            >
              <input
                type="text"
                id="search-input"
                placeholder="Busca cualquier cosa que desees..."
                class="group/item w-full outline-none pl-4 pr-10 text-sm rounded-xl shadow-md border-none text-base-color-h dark:text-base-color-dark-h placeholder-base-color-m dark:placeholder-base-color-dark-m bg-white/50 dark:bg-base-full-dark-40 backdrop-blur backdrop-saturate-150 focus:shadow-lg focus:ring-0 transition-shadow"
              />
              <button
                type="button"
                id="search-button"
                class="flex justify-center items-center absolute w-10 h-10 right-0"
                aria-label="Buscar"
              >
                <Search
                  id="search-icon"
                  width="24"
                  height="24"
                  class="text-base-color-m dark:text-base-color-dark-m"
                />
                <Clear
                  id="clear-icon"
                  width="16"
                  height="16"
                  class="text-base-color-m dark:text-base-color-dark-m hidden"
                />
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="flex flex-row flex-1 relative w-full gap-5">
    <section
      class="flex flex-col flex-1 mb-5 w-full bg-white dark:bg-base-dark text-base-color-h dark:text-base-color-dark rounded-xl shadow-md p-4"
    >
      <h3 class="text-2xl font-bold mb-4">Recomendaciones</h3>
      <RecomCarousel />
    </section>
    <aside class="hidden lg:flex">
      <section
        class="mb-5 w-80 bg-white dark:bg-base-dark text-base-color-h dark:text-base-color-dark rounded-xl shadow-md p-4 pb-14"
      >
        <h3 class="text-2xl font-bold mb-4">Ãšltimo mes</h3>
        <div class="flex">
          <!-- Noticias individuales -->
          {
            news
              ?.slice(0, 1)
              ?.map((item: any) => (
                <NewsCard
                  author={item.author}
                  title={item.title}
                  description={item.description}
                  url={item.url}
                  image={item.urlToImage}
                  date={item.publishedAt}
                />
              )) || <NewsCard />
          }
        </div>
      </section>
    </aside>
  </div>
  <div class="flex flex-col flex-1 relative w-full select-none">
    <section
      class="flex flex-col flex-1 mb-5 w-full bg-white dark:bg-base-dark text-base-color-h dark:text-base-color-dark rounded-xl shadow-md p-4"
    >
      <div
        class="flex justify-center items-center h-10 px-4 mb-4 text-white bg-[linear-gradient(to_right,rgb(242,112,156),rgb(255,148,114))] dark:bg-[linear-gradient(111.1deg,#061b37_-4.8%,_rgb(255,_115,_115)_82.7%,_rgb(255,_175,_123)_97.2%)] shadow-md rounded-xl"
      >
        <h3 class="text-2xl font-bold">Recursos Principales</h3>
      </div>
      <Resources />
    </section>
  </div>
</main>
<script>
  import { $ } from "@/lib/dom-selector";

  document.addEventListener("astro:page-load", () => {
    const $searchInput = $("#search-input") as HTMLInputElement;
    const $searchIcon = $("#search-icon");
    const $clearIcon = $("#clear-icon");

    if ($searchInput) {
      $searchInput.oninput = () => {
        $searchInput.value.length > 0
          ? ($searchIcon?.classList.add("hidden"),
            $clearIcon?.classList.remove("hidden"))
          : ($searchIcon?.classList.remove("hidden"),
            $clearIcon?.classList.add("hidden"));
      };
    }
    const $searchButton = $("#search-button") as HTMLButtonElement;

    $searchButton.onclick = () => {
      $searchInput.value.length > 0 &&
        (($searchInput.value = ""),
        $searchIcon?.classList.remove("hidden"),
        $clearIcon?.classList.add("hidden"));
    };
  });
</script>

<div
  id="focus_modal"
  class="z-40 invisible backdrop-blur-0 saturate-100 bg-overlay/30 w-screen h-dvh fixed inset-0 opacity-0 transition-all ease-linear"
>
</div>
<div
  id="overlayModal"
  class="z-50 invisible bg-overlay/70 w-screen h-dvh fixed inset-0 opacity-0 transition-[visibility,_opacity]"
>
</div>
